import React, { useEffect, useState } from "react"
import Typewriter from "typewriter-effect"

import { Loader, Card, FormField } from "../components"

const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />)
  }

  return (
    <h2 className="mt-5 text-xl font-bold uppercase text-not-that-black">
      {title}
    </h2>
  )
}

const Home = () => {
  const [loading, setLoading] = useState(false)
  const [allPosts, setAllPosts] = useState(null)
  const [searchText, setSearchText] = useState("")
  const [searchedResults, setSearchedResults] = useState(null)
  const [searchTimeout, setSearchTimeout] = useState(null)

  const fetchPosts = async () => {
    setLoading(true)

    try {
      const res = await fetch("http://localhost:8080/api/v1/post", {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
      })

      if (res.ok) {
        const result = await res.json()
        setAllPosts(result.data.reverse()) // Reverse to show newest post
      }
    } catch (error) {
      alert(error)
    } finally {
      setLoading(false)
    }
  }

  useEffect(() => {
    fetchPosts()
  }, [])

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout)

    setSearchText(e.target.value)

    setSearchTimeout(
      setTimeout(() => {
        const searchResults = allPosts.filter(
          (item) =>
            item.name.toLowerCase().includes(searchText.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchText.toLowerCase())
        )

        setSearchedResults(searchResults)
      }, 500)
    )
  }

  return (
    <section className="mx-auto max-w-7xl">
      <div className="text-center font-serif font-bold">
        <h1 className="font-serif text-4xl text-not-that-black xs:text-6xl">
          The Community Showcase
        </h1>
        <p className="text-md mt-2 font-serif text-sky-blue xs:text-lg ">
          Browse through a collection of imaginative and visually stunning
          images generated by
        </p>
        <p className="mt-2 text-4xl font-extrabold tracking-wider text-not-that-black">
          <Typewriter
            options={{
              strings: "DALL-E",
              autoStart: true,
              pauseFor: 3000,
              loop: true,
            }}
          />
        </p>
      </div>

      <div className="mt-16">
        <FormField
          labelName="Search images"
          type="text"
          name="text"
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      <div className="mt-10">
        {loading ? (
          <div className="flex items-center justify-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="mb-3 text-xl font-medium text-smoke-gray">
                Showing results for
                <span className="text-not-that-black"> {searchText}</span>
              </h2>
            )}

            <div className="grid grid-cols-1 gap-3 xs:grid-cols-2 sm:grid-cols-3 lg:grid-cols-4">
              {searchText ? (
                <RenderCards
                  data={searchedResults}
                  title="No search results found"
                />
              ) : (
                <RenderCards data={allPosts} title="No posts found" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  )
}

export default Home
